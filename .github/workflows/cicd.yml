name: CI

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # CHANGE TO YOUR BRANCH
  push:
    branches: [main]

jobs:
  build:
    runs-on: self-hosted
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Building docker images
        run: |
          cd APP
          docker-compose build

  deploy:
    runs-on: self-hosted
    needs: [build]
    steps:
      - name: Initializing workspace
        run: |
          echo "Uploading to IEM"
          mkdir -p workspace
          cd workspace
          ie-app-publisher-linux ws init   
          cd ..

      - name: Uploading app to IEM
        run: |
          echo "Uploading to IEM"
          cp -RT APP ./workspace
          cd workspace
          ie-app-publisher-linux de c -u http://localhost:2375
          export IE_SKIP_CERTIFICATE=true
          ie-app-publisher-linux em li -u ${{secrets.IEM_URL}} -e ${{secrets.USER_NAME}} -p ${{secrets.PSWD}}
  

          app_details=$(ie-app-publisher-linux em app dt -a ${{secrets.APP_ID}} -p)
          app_details="${app_details//false/0}"   
          app_details="${app_details//true/1}"   
          py_find_version=$(cat <<END
          import sys, json;
          if len(dict($app_details)['versions']) > 0:
              print(dict($app_details)['versions'][0]['versionNumber'])
          else:
              print('')
          END
          )
          version="$(python3 -c "$py_find_version")"

          if [ -z "$version" ]
          then
              version_new=0.0.1
              echo 'First version of application created : '$version_new
          else
              echo 'Detected Application old Version: '$version
              version_new=$(echo $version | awk -F. -v OFS=. 'NF==1{print ++$NF}; NF>1{if(length($NF+1)>length($NF))$(NF-1)++; $NF=sprintf("%0*d", length($NF), ($NF+1)%(10^length($NF))); print}')
              echo 'Update with new Version: '$version_new
          fi
          

          ie-app-publisher-linux em app cuv -a ${{secrets.APP_ID}} -v $new_version -y ./docker-compose-prod.yml -n '{"simplechat-py":[{"name":"simplechat-py","protocol":"HTTP","port":"5000","headers":"","rewriteTarget":"/"}]}' -s 'simplechat-py' -t 'FromBoxReverseProxy' -u "simplechat-py" -r "/"
          ie-app-publisher-linux em app uuv -a ${{secrets.APP_ID}} -v $new_version
